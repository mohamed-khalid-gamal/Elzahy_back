{
  "info": {
    "name": "Elzahy Portfolio 2FA Authentication API",
    "description": "Complete API collection for testing 2FA authentication flows",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://localhost:7000"
    },
    {
      "key": "accessToken",
      "value": ""
    },
    {
      "key": "refreshToken",
      "value": ""
    },
    {
      "key": "tempToken",
      "value": ""
    },
    {
      "key": "userEmail",
      "value": "test@example.com"
    },
    {
      "key": "recoveryCode",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "1. Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.collectionVariables.set('accessToken', response.data.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', response.data.refreshToken);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"Password123!\",\n  \"name\": \"Test User\",\n  \"terms\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "2. Login (No 2FA)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        if (response.data.requiresTwoFactor) {",
                  "            pm.collectionVariables.set('tempToken', response.data.tempToken);",
                  "            pm.test('2FA Required', () => {",
                  "                pm.expect(response.data.requiresTwoFactor).to.be.true;",
                  "            });",
                  "        } else {",
                  "            pm.collectionVariables.set('accessToken', response.data.accessToken);",
                  "            pm.collectionVariables.set('refreshToken', response.data.refreshToken);",
                  "            pm.test('Login Successful', () => {",
                  "                pm.expect(response.data.accessToken).to.not.be.empty;",
                  "            });",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\",\n  \"language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "Two-Factor Authentication",
      "item": [
        {
          "name": "1. Setup 2FA",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.collectionVariables.set('secretKey', response.data.secretKey);",
                  "        pm.test('QR Code Generated', () => {",
                  "            pm.expect(response.data.qrCodeImage).to.contain('data:image/png;base64,');",
                  "        });",
                  "        pm.test('Manual Key Provided', () => {",
                  "            pm.expect(response.data.manualEntryKey).to.not.be.empty;",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/2fa/setup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "2fa", "setup"]
            }
          }
        },
        {
          "name": "2. Enable 2FA",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.collectionVariables.set('recoveryCode', response.data.recoveryCodes[0]);",
                  "        pm.test('2FA Enabled Successfully', () => {",
                  "            pm.expect(response.data.success).to.be.true;",
                  "        });",
                  "        pm.test('Recovery Codes Generated', () => {",
                  "            pm.expect(response.data.recoveryCodes).to.have.length(10);",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/2fa/enable",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "2fa", "enable"]
            },
            "description": "IMPORTANT: Replace '123456' with the actual TOTP code from your authenticator app"
          }
        },
        {
          "name": "3. Login with 2FA Required",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data && response.data.requiresTwoFactor) {",
                  "        pm.collectionVariables.set('tempToken', response.data.tempToken);",
                  "        pm.test('2FA Required', () => {",
                  "            pm.expect(response.data.requiresTwoFactor).to.be.true;",
                  "        });",
                  "        pm.test('Temp Token Provided', () => {",
                  "            pm.expect(response.data.tempToken).to.not.be.empty;",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "4. Verify 2FA Code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.collectionVariables.set('accessToken', response.data.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', response.data.refreshToken);",
                  "        pm.test('Access Token Received', () => {",
                  "            pm.expect(response.data.accessToken).to.not.be.empty;",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tempToken\": \"{{tempToken}}\",\n  \"code\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/2fa/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "2fa", "verify"]
            },
            "description": "IMPORTANT: Replace '123456' with the actual TOTP code from your authenticator app"
          }
        },
        {
          "name": "5. Verify Recovery Code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.collectionVariables.set('accessToken', response.data.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', response.data.refreshToken);",
                  "        pm.test('Recovery Code Authentication Successful', () => {",
                  "            pm.expect(response.data.accessToken).to.not.be.empty;",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tempToken\": \"{{tempToken}}\",\n  \"recoveryCode\": \"{{recoveryCode}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/2fa/verify-recovery",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "2fa", "verify-recovery"]
            },
            "description": "Use this as an alternative to TOTP verification. Note: Each recovery code can only be used once."
          }
        },
        {
          "name": "Generate New Recovery Codes",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.test('New Recovery Codes Generated', () => {",
                  "            pm.expect(response.data.recoveryCodes).to.have.length(10);",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/2fa/recovery-codes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "2fa", "recovery-codes"]
            }
          }
        },
        {
          "name": "Disable 2FA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/2fa/disable",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "2fa", "disable"]
            }
          }
        }
      ]
    },
    {
      "name": "Token Management",
      "item": [
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.to.have.status(200)) {",
                  "    const response = pm.response.json();",
                  "    if (response.ok && response.data) {",
                  "        pm.collectionVariables.set('accessToken', response.data.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', response.data.refreshToken);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh-token"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Password Management",
      "item": [
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"RESET_TOKEN_FROM_EMAIL\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            }
          }
        },
        {
          "name": "Confirm Email",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/auth/confirm-email?token=EMAIL_CONFIRMATION_TOKEN",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "confirm-email"],
              "query": [
                {
                  "key": "token",
                  "value": "EMAIL_CONFIRMATION_TOKEN"
                }
              ]
            }
          }
        }
      ]
    }
  ]
}